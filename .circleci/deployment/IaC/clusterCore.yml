---
AWSTemplateFormatVersion: "2010-09-09"
Description: 'Managed Nodes (SSH access: false) created by Magido Mascate'

Mappings:
  ServicePrincipalPartitionMap:
    aws:
      EC2: ec2.amazonaws.com
      EKS: eks.amazonaws.com

Parameters:
  ClusterIaCStackName:
    Description: Cluster communication network stack name
    Type: String

Resources:
  
  ManagedNodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      AmiType: AL2_x86_64
      ClusterName: openhcs
      InstanceTypes:
        - t3.medium
      Labels:
        alpha.eksctl.io/cluster-name: openhcs
        alpha.eksctl.io/nodegroup-name: openhcs-ng
      NodeRole: !GetAtt NodeInstanceRole.Arn
      NodegroupName: "openhcs-ng"
      ScalingConfig:
        DesiredSize: 1
        MaxSize: 1
        MinSize: 1
      Subnets: 
        - Fn::ImportValue: 
            !Sub '${ClusterIaCStackName}::SubnetsPublic1'
        - Fn::ImportValue: 
            !Sub '${ClusterIaCStackName}::SubnetsPublic2'
      Tags:
        alpha.eksctl.io/nodegroup-name: openhcs-ng
        alpha.eksctl.io/nodegroup-type: managed
        Key: Name 
        Value: TheOpenHCS-SingleNode
      
  
  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - !FindInMap 
                  - ServicePrincipalPartitionMap
                  - !Ref 'AWS::Partition'
                  - EC2
        Version: "2012-10-17"
      ManagedPolicyArns:
        - !Sub >-
            arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy'
      Path: /
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}/NodeInstanceRole'


Outputs:
  
  NodeInstanceRole:
    Description: Cluster Nodes instance role 
    Value: !GetAtt  NodeInstanceRole.Arn